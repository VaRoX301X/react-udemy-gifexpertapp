{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","type","value","onChange","console","log","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"yMAiCeA,EA/BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,SAPW,SAACC,GAClBA,EAAEC,iBACFN,GAAc,SAACO,GAAD,OAAUL,GAAV,mBAAyBK,OACvCJ,EAAc,KAId,SACI,uBACIK,KAAK,OACLC,MAAOP,EACPQ,SAhBc,SAACL,GACvBM,QAAQC,IAAIP,EAAEQ,OAAOJ,OACrBN,EAAcE,EAAEQ,OAAOJ,a,uBCWhBK,EAjBK,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,8DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAcZM,GAdY,4CAAH,sDCSLO,EATK,SAAC,GAAW,IAAVL,EAAS,EAATA,IAClB,OACI,sBAAKM,UAAU,yCAAf,UACI,4BAAIN,EAAIE,QACR,qBAAKK,IAAKP,EAAIR,IAAKgB,IAAKR,EAAIE,YC0BzBO,EA5BC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAEd,ECHwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,IAEbxB,QAAQC,IAAIwB,KACb,WAEZ,CAACrB,IAEGqB,EDjByBM,CAAa3B,GAAhCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAMrB,OAJAxB,QAAQC,IAAIuB,GAKR,qCACI,6BAAKpB,IACJoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,8CAAf,SAIYH,EAAOJ,KAAI,SAAAC,GAAG,OACN,cAAC,EAAD,CAEAA,IAAKA,GADAA,EAAIC,aEe1BiB,EAhCM,WAIjB,MAAoC1C,mBAAS,IAA7C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KASA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAEQ4C,EAAWpB,KAAI,SAAAqB,GAAG,OACT,cAAC,EAAD,CAAmB9B,SAAU8B,GAAfA,Y,YCvB3CC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f8c348ec.chunk.js","sourcesContent":["import {React, useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setCategories((cats)=>[ inputValue, ...cats]);\r\n        setInputValue('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","\r\n\r\nexport const getGifs = async( category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=5&api_key=LXIYm2Y91vFmUWj3I7f1sGG6dj1OsC40`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map (img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n\r\n    return gifs;\r\n}\r\n\r\nexport default getGifs;","import React from 'react'\r\n\r\nconst GifGridItem = ({img}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <p>{img.title}</p>\r\n            <img src={img.url} alt={img.title}></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import getGifs from '../helpers/getGifs';\r\nimport GifGridItem from './GifGridItem';\r\nconst GifGrid = ({category}) => {\r\n\r\n    const { data:images ,loading} = useFetchGifs(category);\r\n\r\n    console.log(loading);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid animate__animated animate__fadeIn\">\r\n                \r\n                    \r\n                    {\r\n                        images.map(img => \r\n                                <GifGridItem \r\n                                key={img.id}\r\n                                img={img} \r\n                                />    \r\n                        )\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport getGifs from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( ( ) => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                    console.log(state);\r\n                }, 1500);\r\n            })\r\n    }, [category]);\r\n\r\n    return state; \r\n}","import {React, useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = ['One punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    // const handleAdd = () => {\r\n        \r\n    //     // setCategories(categories.concat(['nuevo']));\r\n    //     // setCategories(['HunterxHunter', ...categories]);\r\n    //     // setCategories( cats => [...cats, 'HunterXHunter'])\r\n    // }\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            \r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(cat => \r\n                            (<GifGrid key={cat} category={cat}/>)      \r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\nimport 'animate.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}